<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/Aggregator/Model/Item.php
*/
abstract class Plugg_Aggregator_Model_Base_Item extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Item', $model);
        $this->_vars = array('item_id' => 0, 'item_created' => 0, 'item_updated' => 0, 'item_title' => null, 'item_url' => null, 'item_body' => null, 'item_author' => null, 'item_author_link' => null, 'item_published' => 0, 'item_categories' => null, 'item_hidden' => 0, 'item_md5' => null, 'item_feed_id' => 0);
    }

    public function __clone()
    {
        $this->_vars = array_merge($this->_vars, array('item_id' => 0, 'item_created' => 0, 'item_updated' => 0));
    }

    public function __toString()
    {
        return $this->_get('title', null, null);
    }

    public function assignFeed(Plugg_Aggregator_Model_Feed $entity)
    {
        $this->_assignEntity($entity, 'feed_id');
        return $this;
    }

    public function unassignFeed()
    {
        $this->_unassignEntity('Feed', 'feed_id');
        return $this;
    }

    protected function _fetchFeed()
    {
        return $this->_fetchEntity('Feed', 'feed_id');
    }

    protected function _get($name, $sort, $order, $limit = 0, $offset = 0)
    {
        switch ($name) {
        case 'id':
            return $this->_vars['item_id'];
        case 'created':
            return $this->_vars['item_created'];
        case 'updated':
            return $this->_vars['item_updated'];
        case 'title':
            return $this->_vars['item_title'];
        case 'url':
            return $this->_vars['item_url'];
        case 'body':
            return $this->_vars['item_body'];
        case 'author':
            return $this->_vars['item_author'];
        case 'author_link':
            return $this->_vars['item_author_link'];
        case 'published':
            return $this->_vars['item_published'];
        case 'categories':
            return $this->_vars['item_categories'];
        case 'hidden':
            return $this->_vars['item_hidden'];
        case 'md5':
            return $this->_vars['item_md5'];
        case 'feed_id':
            return $this->_vars['item_feed_id'];
        case 'Feed':
            return $this->_fetchFeed();
default:
return isset($this->_objects[$name]) ? $this->_objects[$name] : null;
        }
    }

    protected function _set($name, $value, $markDirty)
    {
        switch ($name) {
        case 'id':
            $this->_setVar('item_id', $value, $markDirty);
            break;
        case 'title':
            $this->_setVar('item_title', $value, $markDirty);
            break;
        case 'url':
            $this->_setVar('item_url', $value, $markDirty);
            break;
        case 'body':
            $this->_setVar('item_body', $value, $markDirty);
            break;
        case 'author':
            $this->_setVar('item_author', $value, $markDirty);
            break;
        case 'author_link':
            $this->_setVar('item_author_link', $value, $markDirty);
            break;
        case 'published':
            $this->_setVar('item_published', $value, $markDirty);
            break;
        case 'categories':
            $this->_setVar('item_categories', $value, $markDirty);
            break;
        case 'hidden':
            $this->_setVar('item_hidden', $value, $markDirty);
            break;
        case 'md5':
            $this->_setVar('item_md5', $value, $markDirty);
            break;
        case 'feed_id':
            $this->_setVar('item_feed_id', $value, $markDirty);
            break;
        case 'Feed':
            $entity = is_array($value) ? $value[0] : $value;
            $this->assignFeed($entity);
            break;
        }
    }

    protected function _initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_Aggregator_Model_Base_ItemRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Item', $model);
    }

    public function fetchByFeed($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('item_feed_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByFeed($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Feed', $id, $perpage, $sort, $order);
    }

    public function countByFeed($id)
    {
        return $this->_countByForeign('item_feed_id', $id);
    }

    public function fetchByFeedAndCriteria($id, Sabai_Model_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('item_feed_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByFeedAndCriteria($id, Sabai_Model_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Feed', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByFeedAndCriteria($id, Sabai_Model_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('item_feed_id', $id, $criteria);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_Aggregator_Model_Base_ItemsByRowset($rs, $this->_model->create('Item'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_Aggregator_Model_Base_Items($this->_model, $entities);
    }
}

class Plugg_Aggregator_Model_Base_ItemsByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Plugg_Aggregator_Model_Item $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Items', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_Aggregator_Model_Base_Items extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Items', $entities);
    }
}