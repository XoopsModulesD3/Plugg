<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/Friends/Model/RequestGateway.php
*/
abstract class Plugg_Friends_Model_Base_RequestGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'request';
    }

    public function getFields()
    {
        return array('request_id' => Sabai_Model::KEY_TYPE_INT, 'request_created' => Sabai_Model::KEY_TYPE_INT, 'request_updated' => Sabai_Model::KEY_TYPE_INT, 'request_to' => Sabai_Model::KEY_TYPE_INT, 'request_message' => Sabai_Model::KEY_TYPE_TEXT, 'request_status' => Sabai_Model::KEY_TYPE_INT, 'request_user_id' => Sabai_Model::KEY_TYPE_INT);
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %srequest WHERE request_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %srequest WHERE request_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(',', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$srequest WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery($values)
    {
        $values['request_created'] = time();
        $values['request_updated'] = 0;
        return sprintf("INSERT INTO %srequest(request_created, request_updated, request_to, request_message, request_status, request_user_id) VALUES(%d, %d, %d, %s, %d, %d)", $this->_db->getResourcePrefix(), $values['request_created'], $values['request_updated'], $values['request_to'], $this->_db->escapeString($values['request_message']), $values['request_status'], $values['request_user_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['request_updated'];
        $values['request_updated'] = time();
        return sprintf("UPDATE %srequest SET request_updated = %d, request_to = %d, request_message = %s, request_status = %d, request_user_id = %d WHERE request_id = %d AND request_updated = %d", $this->_db->getResourcePrefix(), $values['request_updated'], $values['request_to'], $this->_db->escapeString($values['request_message']), $values['request_status'], $values['request_user_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$srequest WHERE request_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['request_updated'] = 'request_updated=' . time();
        return sprintf('UPDATE %srequest SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$srequest WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$srequest WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }
}