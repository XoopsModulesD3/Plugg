<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/System/Model/Dependency.php
*/
abstract class Plugg_System_Model_Base_Dependency extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Dependency', $model);
        $this->_vars = array('dependency_id' => 0, 'dependency_created' => 0, 'dependency_updated' => 0, 'dependency_requires' => 0, 'dependency_plugin_id' => 0);
    }

    public function __clone()
    {
        $this->_vars = array_merge($this->_vars, array('dependency_id' => 0, 'dependency_created' => 0, 'dependency_updated' => 0));
    }

    public function __toString()
    {
        return 'Dependency #' . $this->_get('id', null, null);
    }

    public function assignPlugin(Plugg_System_Model_Plugin $entity)
    {
        $this->_assignEntity($entity, 'plugin_id');
        return $this;
    }

    public function unassignPlugin()
    {
        $this->_unassignEntity('Plugin', 'plugin_id');
        return $this;
    }

    protected function _fetchPlugin()
    {
        return $this->_fetchEntity('Plugin', 'plugin_id');
    }

    protected function _get($name, $sort, $order, $limit = 0, $offset = 0)
    {
        switch ($name) {
        case 'id':
            return $this->_vars['dependency_id'];
        case 'created':
            return $this->_vars['dependency_created'];
        case 'updated':
            return $this->_vars['dependency_updated'];
        case 'requires':
            return $this->_vars['dependency_requires'];
        case 'plugin_id':
            return $this->_vars['dependency_plugin_id'];
        case 'Plugin':
            return $this->_fetchPlugin();
default:
return isset($this->_objects[$name]) ? $this->_objects[$name] : null;
        }
    }

    protected function _set($name, $value, $markDirty)
    {
        switch ($name) {
        case 'id':
            $this->_setVar('dependency_id', $value, $markDirty);
            break;
        case 'requires':
            $this->_setVar('dependency_requires', $value, $markDirty);
            break;
        case 'plugin_id':
            $this->_setVar('dependency_plugin_id', $value, $markDirty);
            break;
        case 'Plugin':
            $entity = is_array($value) ? $value[0] : $value;
            $this->assignPlugin($entity);
            break;
        }
    }

    protected function _initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_System_Model_Base_DependencyRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Dependency', $model);
    }

    public function fetchByPlugin($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('dependency_plugin_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByPlugin($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Plugin', $id, $perpage, $sort, $order);
    }

    public function countByPlugin($id)
    {
        return $this->_countByForeign('dependency_plugin_id', $id);
    }

    public function fetchByPluginAndCriteria($id, Sabai_Model_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('dependency_plugin_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByPluginAndCriteria($id, Sabai_Model_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Plugin', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByPluginAndCriteria($id, Sabai_Model_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('dependency_plugin_id', $id, $criteria);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_System_Model_Base_DependenciesByRowset($rs, $this->_model->create('Dependency'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_System_Model_Base_Dependencies($this->_model, $entities);
    }
}

class Plugg_System_Model_Base_DependenciesByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Plugg_System_Model_Dependency $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Dependencies', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_System_Model_Base_Dependencies extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Dependencies', $entities);
    }
}