<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/System/Model/AdminrouteGateway.php
*/
abstract class Plugg_System_Model_Base_AdminrouteGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'adminroute';
    }

    public function getFields()
    {
        return array('adminroute_id' => Sabai_Model::KEY_TYPE_INT, 'adminroute_created' => Sabai_Model::KEY_TYPE_INT, 'adminroute_updated' => Sabai_Model::KEY_TYPE_INT, 'adminroute_path' => Sabai_Model::KEY_TYPE_VARCHAR, 'adminroute_format' => Sabai_Model::KEY_TYPE_TEXT, 'adminroute_controller' => Sabai_Model::KEY_TYPE_VARCHAR, 'adminroute_forward' => Sabai_Model::KEY_TYPE_VARCHAR, 'adminroute_plugin' => Sabai_Model::KEY_TYPE_VARCHAR, 'adminroute_type' => Sabai_Model::KEY_TYPE_INT, 'adminroute_access_callback' => Sabai_Model::KEY_TYPE_INT, 'adminroute_title_callback' => Sabai_Model::KEY_TYPE_INT, 'adminroute_title' => Sabai_Model::KEY_TYPE_VARCHAR, 'adminroute_weight' => Sabai_Model::KEY_TYPE_INT, 'adminroute_depth' => Sabai_Model::KEY_TYPE_INT);
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sadminroute WHERE adminroute_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sadminroute WHERE adminroute_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(',', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$sadminroute WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery($values)
    {
        $values['adminroute_created'] = time();
        $values['adminroute_updated'] = 0;
        return sprintf("INSERT INTO %sadminroute(adminroute_created, adminroute_updated, adminroute_path, adminroute_format, adminroute_controller, adminroute_forward, adminroute_plugin, adminroute_type, adminroute_access_callback, adminroute_title_callback, adminroute_title, adminroute_weight, adminroute_depth) VALUES(%d, %d, %s, %s, %s, %s, %s, %d, %d, %d, %s, %d, %d)", $this->_db->getResourcePrefix(), $values['adminroute_created'], $values['adminroute_updated'], $this->_db->escapeString($values['adminroute_path']), $this->_db->escapeString($values['adminroute_format']), $this->_db->escapeString($values['adminroute_controller']), $this->_db->escapeString($values['adminroute_forward']), $this->_db->escapeString($values['adminroute_plugin']), $values['adminroute_type'], $values['adminroute_access_callback'], $values['adminroute_title_callback'], $this->_db->escapeString($values['adminroute_title']), $values['adminroute_weight'], $values['adminroute_depth']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['adminroute_updated'];
        $values['adminroute_updated'] = time();
        return sprintf("UPDATE %sadminroute SET adminroute_updated = %d, adminroute_path = %s, adminroute_format = %s, adminroute_controller = %s, adminroute_forward = %s, adminroute_plugin = %s, adminroute_type = %d, adminroute_access_callback = %d, adminroute_title_callback = %d, adminroute_title = %s, adminroute_weight = %d, adminroute_depth = %d WHERE adminroute_id = %d AND adminroute_updated = %d", $this->_db->getResourcePrefix(), $values['adminroute_updated'], $this->_db->escapeString($values['adminroute_path']), $this->_db->escapeString($values['adminroute_format']), $this->_db->escapeString($values['adminroute_controller']), $this->_db->escapeString($values['adminroute_forward']), $this->_db->escapeString($values['adminroute_plugin']), $values['adminroute_type'], $values['adminroute_access_callback'], $values['adminroute_title_callback'], $this->_db->escapeString($values['adminroute_title']), $values['adminroute_weight'], $values['adminroute_depth'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sadminroute WHERE adminroute_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['adminroute_updated'] = 'adminroute_updated=' . time();
        return sprintf('UPDATE %sadminroute SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$sadminroute WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sadminroute WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }
}