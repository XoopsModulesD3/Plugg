<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/HTMLPurifierFilter/Model/CustomfilterGateway.php
*/
abstract class Plugg_HTMLPurifierFilter_Model_Base_CustomfilterGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'customfilter';
    }

    public function getFields()
    {
        return array('customfilter_id' => Sabai_Model::KEY_TYPE_INT, 'customfilter_created' => Sabai_Model::KEY_TYPE_INT, 'customfilter_updated' => Sabai_Model::KEY_TYPE_INT, 'customfilter_name' => Sabai_Model::KEY_TYPE_VARCHAR, 'customfilter_plugin' => Sabai_Model::KEY_TYPE_VARCHAR, 'customfilter_order' => Sabai_Model::KEY_TYPE_INT, 'customfilter_active' => Sabai_Model::KEY_TYPE_INT);
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %scustomfilter WHERE customfilter_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %scustomfilter WHERE customfilter_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(',', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$scustomfilter WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery($values)
    {
        $values['customfilter_created'] = time();
        $values['customfilter_updated'] = 0;
        return sprintf("INSERT INTO %scustomfilter(customfilter_created, customfilter_updated, customfilter_name, customfilter_plugin, customfilter_order, customfilter_active) VALUES(%d, %d, %s, %s, %d, %d)", $this->_db->getResourcePrefix(), $values['customfilter_created'], $values['customfilter_updated'], $this->_db->escapeString($values['customfilter_name']), $this->_db->escapeString($values['customfilter_plugin']), $values['customfilter_order'], $values['customfilter_active']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['customfilter_updated'];
        $values['customfilter_updated'] = time();
        return sprintf("UPDATE %scustomfilter SET customfilter_updated = %d, customfilter_name = %s, customfilter_plugin = %s, customfilter_order = %d, customfilter_active = %d WHERE customfilter_id = %d AND customfilter_updated = %d", $this->_db->getResourcePrefix(), $values['customfilter_updated'], $this->_db->escapeString($values['customfilter_name']), $this->_db->escapeString($values['customfilter_plugin']), $values['customfilter_order'], $values['customfilter_active'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$scustomfilter WHERE customfilter_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['customfilter_updated'] = 'customfilter_updated=' . time();
        return sprintf('UPDATE %scustomfilter SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$scustomfilter WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$scustomfilter WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }
}