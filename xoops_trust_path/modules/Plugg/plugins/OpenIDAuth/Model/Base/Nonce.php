<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/OpenIDAuth/Model/Nonce.php
*/
abstract class Plugg_OpenIDAuth_Model_Base_Nonce extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Nonce', $model);
        $this->_vars = array('nonce_id' => 0, 'nonce_created' => 0, 'nonce_updated' => 0, 'nonce_server_url' => null, 'nonce_timestamp' => 0, 'nonce_salt' => null);
    }

    public function __clone()
    {
        $this->_vars = array_merge($this->_vars, array('nonce_id' => 0, 'nonce_created' => 0, 'nonce_updated' => 0));
    }

    public function __toString()
    {
        return 'Nonce #' . $this->_get('id', null, null);
    }

    protected function _get($name, $sort, $order, $limit = 0, $offset = 0)
    {
        switch ($name) {
        case 'id':
            return $this->_vars['nonce_id'];
        case 'created':
            return $this->_vars['nonce_created'];
        case 'updated':
            return $this->_vars['nonce_updated'];
        case 'server_url':
            return $this->_vars['nonce_server_url'];
        case 'timestamp':
            return $this->_vars['nonce_timestamp'];
        case 'salt':
            return $this->_vars['nonce_salt'];
default:
return isset($this->_objects[$name]) ? $this->_objects[$name] : null;
        }
    }

    protected function _set($name, $value, $markDirty)
    {
        switch ($name) {
        case 'id':
            $this->_setVar('nonce_id', $value, $markDirty);
            break;
        case 'server_url':
            $this->_setVar('nonce_server_url', $value, $markDirty);
            break;
        case 'timestamp':
            $this->_setVar('nonce_timestamp', $value, $markDirty);
            break;
        case 'salt':
            $this->_setVar('nonce_salt', $value, $markDirty);
            break;
        }
    }

    protected function _initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_OpenIDAuth_Model_Base_NonceRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Nonce', $model);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_OpenIDAuth_Model_Base_NoncesByRowset($rs, $this->_model->create('Nonce'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_OpenIDAuth_Model_Base_Nonces($this->_model, $entities);
    }
}

class Plugg_OpenIDAuth_Model_Base_NoncesByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Plugg_OpenIDAuth_Model_Nonce $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Nonces', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_OpenIDAuth_Model_Base_Nonces extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Nonces', $entities);
    }
}