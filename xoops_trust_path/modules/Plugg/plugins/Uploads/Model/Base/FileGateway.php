<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/Uploads/Model/FileGateway.php
*/
abstract class Plugg_Uploads_Model_Base_FileGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'file';
    }

    public function getFields()
    {
        return array('file_id' => Sabai_Model::KEY_TYPE_INT, 'file_created' => Sabai_Model::KEY_TYPE_INT, 'file_updated' => Sabai_Model::KEY_TYPE_INT, 'file_name' => Sabai_Model::KEY_TYPE_VARCHAR, 'file_file_name' => Sabai_Model::KEY_TYPE_VARCHAR, 'file_type' => Sabai_Model::KEY_TYPE_VARCHAR, 'file_size' => Sabai_Model::KEY_TYPE_INT, 'file_is_image' => Sabai_Model::KEY_TYPE_INT, 'file_image_width' => Sabai_Model::KEY_TYPE_INT, 'file_image_height' => Sabai_Model::KEY_TYPE_INT, 'file_thumbnail' => Sabai_Model::KEY_TYPE_VARCHAR, 'file_thumbnail_width' => Sabai_Model::KEY_TYPE_INT, 'file_thumbnail_height' => Sabai_Model::KEY_TYPE_INT, 'file_protected' => Sabai_Model::KEY_TYPE_INT, 'file_user_id' => Sabai_Model::KEY_TYPE_INT, 'file_group_id' => Sabai_Model::KEY_TYPE_INT);
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sfile WHERE file_id = %d',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %s FROM %sfile WHERE file_id IN (%s)',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            implode(',', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %1$s FROM %2$sfile WHERE %3$s',
            empty($fields) ? '*' : implode(', ', $fields),
            $this->_db->getResourcePrefix(),
            $criteriaStr
        );
    }

    protected function _getInsertQuery($values)
    {
        $values['file_created'] = time();
        $values['file_updated'] = 0;
        return sprintf("INSERT INTO %sfile(file_created, file_updated, file_name, file_file_name, file_type, file_size, file_is_image, file_image_width, file_image_height, file_thumbnail, file_thumbnail_width, file_thumbnail_height, file_protected, file_user_id, file_group_id) VALUES(%d, %d, %s, %s, %s, %d, %d, %d, %d, %s, %d, %d, %d, %d, %d)", $this->_db->getResourcePrefix(), $values['file_created'], $values['file_updated'], $this->_db->escapeString($values['file_name']), $this->_db->escapeString($values['file_file_name']), $this->_db->escapeString($values['file_type']), $values['file_size'], $values['file_is_image'], $values['file_image_width'], $values['file_image_height'], $this->_db->escapeString($values['file_thumbnail']), $values['file_thumbnail_width'], $values['file_thumbnail_height'], $values['file_protected'], $values['file_user_id'], $values['file_group_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['file_updated'];
        $values['file_updated'] = time();
        return sprintf("UPDATE %sfile SET file_updated = %d, file_name = %s, file_file_name = %s, file_type = %s, file_size = %d, file_is_image = %d, file_image_width = %d, file_image_height = %d, file_thumbnail = %s, file_thumbnail_width = %d, file_thumbnail_height = %d, file_protected = %d, file_user_id = %d, file_group_id = %d WHERE file_id = %d AND file_updated = %d", $this->_db->getResourcePrefix(), $values['file_updated'], $this->_db->escapeString($values['file_name']), $this->_db->escapeString($values['file_file_name']), $this->_db->escapeString($values['file_type']), $values['file_size'], $values['file_is_image'], $values['file_image_width'], $values['file_image_height'], $this->_db->escapeString($values['file_thumbnail']), $values['file_thumbnail_width'], $values['file_thumbnail_height'], $values['file_protected'], $values['file_user_id'], $values['file_group_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$sfile WHERE file_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['file_updated'] = 'file_updated=' . time();
        return sprintf('UPDATE %sfile SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$sfile WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$sfile WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }
}