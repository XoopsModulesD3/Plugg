<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/User/Model/Stat.php
*/
abstract class Plugg_User_Model_Base_Stat extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Stat', $model);
        $this->_vars = array('stat_id' => 0, 'stat_created' => 0, 'stat_updated' => 0, 'stat_last_login' => 0, 'stat_last_edit' => 0, 'stat_last_edit_email' => 0, 'stat_last_edit_password' => 0, 'stat_last_edit_image' => 0, 'stat_user_id' => 0);
    }

    public function __clone()
    {
        $this->_vars = array_merge($this->_vars, array('stat_id' => 0, 'stat_created' => 0, 'stat_updated' => 0));
    }

    public function __toString()
    {
        return 'Stat #' . $this->_get('id', null, null);
    }

    public function assignUser($user, $markDirty = true)
    {
        $this->_set('user_id', $user->id, $markDirty);
        return $this;
    }

    protected function _fetchUser($withData = false)
    {
        if (!isset($this->_objects['User'])) {
            $this->_objects['User'] = $this->_model->User_Identity($this->_vars['stat_user_id'], $withData);
        }

        return $this->_objects['User'];
    }

    public function isOwnedBy($user)
    {
        return $this->user_id && $this->user_id == $user->id;
    }

    protected function _get($name, $sort, $order, $limit = 0, $offset = 0)
    {
        switch ($name) {
        case 'id':
            return $this->_vars['stat_id'];
        case 'created':
            return $this->_vars['stat_created'];
        case 'updated':
            return $this->_vars['stat_updated'];
        case 'last_login':
            return $this->_vars['stat_last_login'];
        case 'last_edit':
            return $this->_vars['stat_last_edit'];
        case 'last_edit_email':
            return $this->_vars['stat_last_edit_email'];
        case 'last_edit_password':
            return $this->_vars['stat_last_edit_password'];
        case 'last_edit_image':
            return $this->_vars['stat_last_edit_image'];
        case 'user_id':
            return $this->_vars['stat_user_id'];
        case 'User':
            return $this->_fetchUser();
        case 'UserWithData':
            return $this->_fetchUser(true);
default:
return isset($this->_objects[$name]) ? $this->_objects[$name] : null;
        }
    }

    protected function _set($name, $value, $markDirty)
    {
        switch ($name) {
        case 'id':
            $this->_setVar('stat_id', $value, $markDirty);
            break;
        case 'last_login':
            $this->_setVar('stat_last_login', $value, $markDirty);
            break;
        case 'last_edit':
            $this->_setVar('stat_last_edit', $value, $markDirty);
            break;
        case 'last_edit_email':
            $this->_setVar('stat_last_edit_email', $value, $markDirty);
            break;
        case 'last_edit_password':
            $this->_setVar('stat_last_edit_password', $value, $markDirty);
            break;
        case 'last_edit_image':
            $this->_setVar('stat_last_edit_image', $value, $markDirty);
            break;
        case 'user_id':
            $this->_setVar('stat_user_id', $value, $markDirty);
            break;
        }
    }

    protected function _initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_User_Model_Base_StatRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Stat', $model);
    }

    public function fetchByUser($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('stat_user_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByUser($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('User', $id, $perpage, $sort, $order);
    }

    public function countByUser($id)
    {
        return $this->_countByForeign('stat_user_id', $id);
    }

    public function fetchByUserAndCriteria($id, Sabai_Model_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('stat_user_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByUserAndCriteria($id, Sabai_Model_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('User', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByUserAndCriteria($id, Sabai_Model_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('stat_user_id', $id, $criteria);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_User_Model_Base_StatsByRowset($rs, $this->_model->create('Stat'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_User_Model_Base_Stats($this->_model, $entities);
    }
}

class Plugg_User_Model_Base_StatsByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Plugg_User_Model_Stat $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Stats', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_User_Model_Base_Stats extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Stats', $entities);
    }
}