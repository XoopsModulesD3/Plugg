<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
pluginsy/Search/Model/Searchable2engineGateway.php
*/
abstract class Plugg_Search_Model_Base_Searchable2engineGateway extends Sabai_Model_Gateway
{
    public function getName()
    {
        return 'searchable2engine';
    }

    public function getFields()
    {
        return array('searchable2engine_id' => Sabai_Model::KEY_TYPE_INT, 'searchable2engine_created' => Sabai_Model::KEY_TYPE_INT, 'searchable2engine_updated' => Sabai_Model::KEY_TYPE_INT, 'searchable2engine_searchable_id' => Sabai_Model::KEY_TYPE_INT, 'searchable2engine_engine_id' => Sabai_Model::KEY_TYPE_INT);
    }

    public function getSortFields()
    {
        return array('searchable_id' => Sabai_Model::KEY_TYPE_INT, 'searchable_created' => Sabai_Model::KEY_TYPE_INT, 'searchable_updated' => Sabai_Model::KEY_TYPE_INT, 'searchable_name' => Sabai_Model::KEY_TYPE_VARCHAR, 'searchable_plugin' => Sabai_Model::KEY_TYPE_VARCHAR, 'searchable_private' => Sabai_Model::KEY_TYPE_INT, 'engine_id' => Sabai_Model::KEY_TYPE_INT, 'engine_created' => Sabai_Model::KEY_TYPE_INT, 'engine_updated' => Sabai_Model::KEY_TYPE_INT, 'engine_plugin' => Sabai_Model::KEY_TYPE_VARCHAR);
    }

    protected function _getSelectByIdQuery($id, $fields)
    {
        return sprintf(
            'SELECT %2$s FROM %1$ssearchable2engine searchable2engine INNER JOIN %1$ssearchable searchable ON searchable.searchable_id = searchable2engine.searchable2engine_searchable_id INNER JOIN %1$sengine engine ON engine.engine_id = searchable2engine.searchable2engine_engine_id WHERE searchable2engine.searchable2engine_id = %3$d',
            $this->_db->getResourcePrefix(),
            empty($fields) ? 'searchable2engine.*, searchable.*, engine.*' : implode(', ', $fields),
            $id
        );
    }

    protected function _getSelectByIdsQuery($ids, $fields)
    {
        return sprintf(
            'SELECT %2$s FROM %1$ssearchable2engine searchable2engine INNER JOIN %1$ssearchable searchable ON searchable.searchable_id = searchable2engine.searchable2engine_searchable_id INNER JOIN %1$sengine engine ON engine.engine_id = searchable2engine.searchable2engine_engine_id WHERE searchable2engine.searchable2engine_id = %3$d',
            $this->_db->getResourcePrefix(),
            empty($fields) ? 'searchable2engine.*, searchable.*, engine.*' : implode(', ', $fields),
            implode(',', array_map('intval', $ids))
        );
    }

    protected function _getSelectByCriteriaQuery($criteriaStr, $fields)
    {
        return sprintf(
            'SELECT %2$s FROM %1$ssearchable2engine searchable2engine INNER JOIN %1$ssearchable searchable ON searchable.searchable_id = searchable2engine.searchable2engine_searchable_id INNER JOIN %1$sengine engine ON engine.engine_id = searchable2engine.searchable2engine_engine_id WHERE %3$s',
            $this->_db->getResourcePrefix(),
            empty($fields) ? 'searchable2engine.*, searchable.*, engine.*' : implode(', ', $fields),
            $criteriaStr
        );
    }

    protected function _getInsertQuery($values)
    {
        $values['searchable2engine_created'] = time();
        $values['searchable2engine_updated'] = 0;
        return sprintf("INSERT INTO %ssearchable2engine(searchable2engine_created, searchable2engine_updated, searchable2engine_searchable_id, searchable2engine_engine_id) VALUES(%d, %d, %d, %d)", $this->_db->getResourcePrefix(), $values['searchable2engine_created'], $values['searchable2engine_updated'], $values['searchable2engine_searchable_id'], $values['searchable2engine_engine_id']);
    }

    protected function _getUpdateQuery($id, $values)
    {
        $last_update = $values['searchable2engine_updated'];
        $values['searchable2engine_updated'] = time();
        return sprintf("UPDATE %ssearchable2engine SET searchable2engine_updated = %d, searchable2engine_searchable_id = %d, searchable2engine_engine_id = %d WHERE searchable2engine_id = %d AND searchable2engine_updated = %d", $this->_db->getResourcePrefix(), $values['searchable2engine_updated'], $values['searchable2engine_searchable_id'], $values['searchable2engine_engine_id'], $id, $last_update);
    }

    protected function _getDeleteQuery($id)
    {
        return sprintf('DELETE FROM %1$ssearchable2engine WHERE searchable2engine_id = %2$d', $this->_db->getResourcePrefix(), $id);
    }

    protected function _getUpdateByCriteriaQuery($criteriaStr, $sets)
    {
        $sets['searchable2engine_updated'] = 'searchable2engine_updated=' . time();
        return sprintf('UPDATE %ssearchable2engine SET %s WHERE %s', $this->_db->getResourcePrefix(), implode(',', $sets), $criteriaStr);
    }

    protected function _getDeleteByCriteriaQuery($criteriaStr)
    {
        return sprintf('DELETE FROM %1$ssearchable2engine WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _getCountByCriteriaQuery($criteriaStr)
    {
        return sprintf('SELECT COUNT(*) FROM %1$ssearchable2engine searchable2engine INNER JOIN %1$ssearchable searchable ON searchable.searchable_id = searchable2engine.searchable2engine_searchable_id INNER JOIN %1$sengine engine ON engine.engine_id = searchable2engine.searchable2engine_engine_id WHERE %2$s', $this->_db->getResourcePrefix(), $criteriaStr);
    }

    protected function _afterInsertTrigger1($id, $new)
    {
    }

    protected function _afterDeleteTrigger1($id, $old)
    {
    }

    protected function _afterUpdateTrigger1($id, $new, $old)
    {
    }

    protected function _afterInsertTrigger($id, $new)
    {
        $this->_afterInsertTrigger1($id, $new);
    }

    protected function _afterUpdateTrigger($id, $new, $old)
    {
        $this->_afterUpdateTrigger1($id, $new, $old);
    }

    protected function _afterDeleteTrigger($id, $old)
    {
        $this->_afterDeleteTrigger1($id, $old);
    }
}