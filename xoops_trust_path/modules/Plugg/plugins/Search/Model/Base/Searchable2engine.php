<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/Search/Model/Searchable2engine.php
*/
abstract class Plugg_Search_Model_Base_Searchable2engine extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Searchable2engine', $model);
        $this->_vars = array('searchable2engine_id' => 0, 'searchable2engine_created' => 0, 'searchable2engine_updated' => 0, 'searchable2engine_searchable_id' => 0, 'searchable2engine_engine_id' => 0);
    }

    public function __clone()
    {
        $this->_vars = array_merge($this->_vars, array('searchable2engine_id' => 0, 'searchable2engine_created' => 0, 'searchable2engine_updated' => 0));
    }

    public function __toString()
    {
        return 'Searchable2engine #' . $this->_get('id', null, null);
    }

    public function assignSearchable(Plugg_Search_Model_Searchable $entity)
    {
        $this->_assignEntity($entity, 'searchable_id');
        return $this;
    }

    public function unassignSearchable()
    {
        $this->_unassignEntity('Searchable', 'searchable_id');
        return $this;
    }

    protected function _fetchSearchable()
    {
        return $this->_fetchEntity('Searchable', 'searchable_id');
    }

    public function assignEngine(Plugg_Search_Model_Engine $entity)
    {
        $this->_assignEntity($entity, 'engine_id');
        return $this;
    }

    public function unassignEngine()
    {
        $this->_unassignEntity('Engine', 'engine_id');
        return $this;
    }

    protected function _fetchEngine()
    {
        return $this->_fetchEntity('Engine', 'engine_id');
    }

    protected function _get($name, $sort, $order, $limit = 0, $offset = 0)
    {
        switch ($name) {
        case 'id':
            return $this->_vars['searchable2engine_id'];
        case 'created':
            return $this->_vars['searchable2engine_created'];
        case 'updated':
            return $this->_vars['searchable2engine_updated'];
        case 'searchable_id':
            return $this->_vars['searchable2engine_searchable_id'];
        case 'engine_id':
            return $this->_vars['searchable2engine_engine_id'];
        case 'Searchable':
            return $this->_fetchSearchable();
        case 'Engine':
            return $this->_fetchEngine();
default:
return isset($this->_objects[$name]) ? $this->_objects[$name] : null;
        }
    }

    protected function _set($name, $value, $markDirty)
    {
        switch ($name) {
        case 'id':
            $this->_setVar('searchable2engine_id', $value, $markDirty);
            break;
        case 'searchable_id':
            $this->_setVar('searchable2engine_searchable_id', $value, $markDirty);
            break;
        case 'engine_id':
            $this->_setVar('searchable2engine_engine_id', $value, $markDirty);
            break;
        case 'Searchable':
            $entity = is_array($value) ? $value[0] : $value;
            $this->assignSearchable($entity);
            break;
        case 'Engine':
            $entity = is_array($value) ? $value[0] : $value;
            $this->assignEngine($entity);
            break;
        }
    }

    protected function _initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_Search_Model_Base_Searchable2engineRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Searchable2engine', $model);
    }

    public function fetchBySearchable($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('searchable2engine_searchable_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateBySearchable($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Searchable', $id, $perpage, $sort, $order);
    }

    public function countBySearchable($id)
    {
        return $this->_countByForeign('searchable2engine_searchable_id', $id);
    }

    public function fetchBySearchableAndCriteria($id, Sabai_Model_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('searchable2engine_searchable_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateBySearchableAndCriteria($id, Sabai_Model_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Searchable', $id, $criteria, $perpage, $sort, $order);
    }

    public function countBySearchableAndCriteria($id, Sabai_Model_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('searchable2engine_searchable_id', $id, $criteria);
    }

    public function fetchByEngine($id, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeign('searchable2engine_engine_id', $id, $limit, $offset, $sort, $order);
    }

    public function paginateByEngine($id, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntity('Engine', $id, $perpage, $sort, $order);
    }

    public function countByEngine($id)
    {
        return $this->_countByForeign('searchable2engine_engine_id', $id);
    }

    public function fetchByEngineAndCriteria($id, Sabai_Model_Criteria $criteria, $limit = 0, $offset = 0, $sort = null, $order = null)
    {
        return $this->_fetchByForeignAndCriteria('searchable2engine_engine_id', $id, $criteria, $limit, $offset, $sort, $order);
    }

    public function paginateByEngineAndCriteria($id, Sabai_Model_Criteria $criteria, $perpage = 10, $sort = null, $order = null)
    {
        return $this->_paginateByEntityAndCriteria('Engine', $id, $criteria, $perpage, $sort, $order);
    }

    public function countByEngineAndCriteria($id, Sabai_Model_Criteria $criteria)
    {
        return $this->_countByForeignAndCriteria('searchable2engine_engine_id', $id, $criteria);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_Search_Model_Base_Searchable2enginesByRowset($rs, $this->_model->create('Searchable2engine'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_Search_Model_Base_Searchable2engines($this->_model, $entities);
    }
}

class Plugg_Search_Model_Base_Searchable2enginesByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Plugg_Search_Model_Searchable2engine $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Searchable2engines', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $arr['searchable2engine_id'] = $row['searchable2engine_id'];
        $arr['searchable2engine_created'] = $row['searchable2engine_created'];
        $arr['searchable2engine_updated'] = $row['searchable2engine_updated'];
        $arr['searchable2engine_searchable_id'] = $row['searchable2engine_searchable_id'];
        $arr['searchable2engine_engine_id'] = $row['searchable2engine_engine_id'];
        $entity->initVars($arr);
        if (isset($row['searchable_id'])) {
            $searchable['searchable_id'] = $row['searchable_id'];
            $searchable['searchable_created'] = $row['searchable_created'];
            $searchable['searchable_updated'] = $row['searchable_updated'];
            $searchable['searchable_name'] = $row['searchable_name'];
            $searchable['searchable_plugin'] = $row['searchable_plugin'];
            $searchable['searchable_private'] = $row['searchable_private'];
            $Searchable = $this->_model->create('Searchable');
            $Searchable->initVars($searchable);
            $Searchable->cache();
        }
        if (isset($row['engine_id'])) {
            $engine['engine_id'] = $row['engine_id'];
            $engine['engine_created'] = $row['engine_created'];
            $engine['engine_updated'] = $row['engine_updated'];
            $engine['engine_plugin'] = $row['engine_plugin'];
            $Engine = $this->_model->create('Engine');
            $Engine->initVars($engine);
            $Engine->cache();
        }
    }
}

class Plugg_Search_Model_Base_Searchable2engines extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Searchable2engines', $entities);
    }
}