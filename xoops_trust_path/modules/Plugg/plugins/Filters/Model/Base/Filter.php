<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
plugins/Filters/Model/Filter.php
*/
abstract class Plugg_Filters_Model_Base_Filter extends Sabai_Model_Entity
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Filter', $model);
        $this->_vars = array('filter_id' => 0, 'filter_created' => 0, 'filter_updated' => 0, 'filter_name' => null, 'filter_plugin' => null, 'filter_title' => null, 'filter_order' => 0, 'filter_active' => 0);
    }

    public function __clone()
    {
        $this->_vars = array_merge($this->_vars, array('filter_id' => 0, 'filter_created' => 0, 'filter_updated' => 0));
    }

    public function __toString()
    {
        return $this->_get('title', null, null);
    }

    protected function _get($name, $sort, $order, $limit = 0, $offset = 0)
    {
        switch ($name) {
        case 'id':
            return $this->_vars['filter_id'];
        case 'created':
            return $this->_vars['filter_created'];
        case 'updated':
            return $this->_vars['filter_updated'];
        case 'name':
            return $this->_vars['filter_name'];
        case 'plugin':
            return $this->_vars['filter_plugin'];
        case 'title':
            return $this->_vars['filter_title'];
        case 'order':
            return $this->_vars['filter_order'];
        case 'active':
            return $this->_vars['filter_active'];
default:
return isset($this->_objects[$name]) ? $this->_objects[$name] : null;
        }
    }

    protected function _set($name, $value, $markDirty)
    {
        switch ($name) {
        case 'id':
            $this->_setVar('filter_id', $value, $markDirty);
            break;
        case 'name':
            $this->_setVar('filter_name', $value, $markDirty);
            break;
        case 'plugin':
            $this->_setVar('filter_plugin', $value, $markDirty);
            break;
        case 'title':
            $this->_setVar('filter_title', $value, $markDirty);
            break;
        case 'order':
            $this->_setVar('filter_order', $value, $markDirty);
            break;
        case 'active':
            $this->_setVar('filter_active', $value, $markDirty);
            break;
        }
    }

    protected function _initVar($name, $value)
    {
        switch ($name) {
        default:
            $this->_vars[$name] = $value;
            break;
        }
    }
}

abstract class Plugg_Filters_Model_Base_FilterRepository extends Sabai_Model_EntityRepository
{
    public function __construct(Sabai_Model $model)
    {
        parent::__construct('Filter', $model);
    }

    protected function _getCollectionByRowset(Sabai_DB_Rowset $rs)
    {
        return new Plugg_Filters_Model_Base_FiltersByRowset($rs, $this->_model->create('Filter'), $this->_model);
    }

    public function createCollection(array $entities = array())
    {
        return new Plugg_Filters_Model_Base_Filters($this->_model, $entities);
    }
}

class Plugg_Filters_Model_Base_FiltersByRowset extends Sabai_Model_EntityCollection_Rowset
{
    public function __construct(Sabai_DB_Rowset $rs, Plugg_Filters_Model_Filter $emptyEntity, Sabai_Model $model)
    {
        parent::__construct('Filters', $rs, $emptyEntity, $model);
    }

    protected function _loadRow(Sabai_Model_Entity $entity, array $row)
    {
        $entity->initVars($row);
    }
}

class Plugg_Filters_Model_Base_Filters extends Sabai_Model_EntityCollection_Array
{
    public function __construct(Sabai_Model $model, array $entities = array())
    {
        parent::__construct($model, 'Filters', $entities);
    }
}